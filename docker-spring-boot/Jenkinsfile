node {
    def mvnHome
    stage('Preparation') { 
        
        git 'https://github.com/quick-aib/docker-java.git'
        
        mvnHome = tool 'M3'
    }
    stage('Build') {
        withEnv(["MVN_HOME=$mvnHome"]) {
            if (isUnix()) {
                sh '"$MVN_HOME/bin/mvn" -f docker-spring-boot/pom.xml -Dmaven.test.failure.ignore clean package'
            } else {
                bat(/"%MVN_HOME%\bin\mvn" -Dmaven.test.failure.ignore clean package/)
            }
        }
    }
    stage('docker build') {
        dir("docker-spring-boot") {
            sh "pwd"
            VERSION = readMavenPom().getVersion()
            echo "VERSION: ${VERSION}  ${BUILD_NUMBER} "
            sh 'docker build -t spring-boot:${BUILD_NUMBER} .'
       } 
    }
    stage('docker push') {
      withCredentials([usernamePassword(credentialsId: 'dockerHub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
        sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
        sh 'docker tag spring-boot:${BUILD_NUMBER} devopsjuly22017/spring-boot:${BUILD_NUMBER}'
        sh 'docker push devopsjuly22017/spring-boot:${BUILD_NUMBER}'
      }
    }
//     stage('docker run') {
//         dir("docker-spring-boot") {
//             sh 'docker rm -f sba1'
// //             sh 'docker run -d -p 8083:8080 --name=sba1 -t spring-boot:1.0'
//        } 
//     }
     stage('deploy') {
        
       dir("docker-spring-boot") {
           withCredentials([file(credentialsId: 'KUBECONFIGID', variable: 'KUBECONFIG')]) {
               def userInput = input(
                            id: 'userInput', message: 'select environment:?',
                            parameters: [

                                    string(defaultValue: 'dev',
                                            description: 'enter dev, or stage, or prod value',
                                            name: 'env')
                            ])
                echo "env:  $userInput"
                sh 'kubectl get node'
                //sh 'kubectl run sba --image=devopsjuly22017/spring-boot:1.0 --port=8080'
                //sh 'kubectl expose pod sba --port=81 --target-port=8080 â€“nodePort=31710 --name=svc1 --type=NodePort'
               sh "i=${userInput};" + 'kubectl delete -f springboot-k8s-deployment-"$i".yml'
               sh "i=${userInput};" + 'kubectl apply -f springboot-k8s-deployment-"$i".yml'
           }
       }
    }
}
